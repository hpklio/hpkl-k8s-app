const scheme = "vals:"

const function secretString(path: String): String? = read?("vals:\(path)").text

const function secretStringListing(path: String): Listing<String> =
  read*("\(scheme)\(path.replaceFirst("#", "!"))/**").toMap()
    .entries.map((p) -> p.second.text).toListing()

const function secretStringMapping(path: String): Mapping<String, String> =
  let (pathKey = "\(scheme)\(path.replaceFirst("#", "!"))/")
    read*("\(pathKey)**").toMap()
      .map((k,v) -> Pair(k.replaceFirst(pathKey, ""), v.text)).toMapping()

class SecretFileReader {
  scheme: String
  function path(path: String, key: String) : String = "\(scheme)://\(path)#/\(key)"
  function string(file: String, key: String) : String? =
    module.secretString(path(file, key))
  function listing(file: String, key: String) : Listing<String> =
    module.secretStringListing(path(file, key))
  function mapping(file: String, key: String) : Mapping<String, String> =
    module.secretStringMapping(path(file, key))
}

sops = new SecretFileReader{ scheme = "sops" }
